(function() {

  $(function() { 
    $.getJSON('/wallpapers.json', function(w) {
      w = w.pop();
      $('.bottom-content').append('<div style="margin-top: 15px"><a href="/wallpapers#' + w.name +
        '"><span style="position: absolute;color: white;bottom: 30px;width: 284px;font-family: Oswald,sans-serif;">new wallpaper!</span><img src="' +
        '//wallpapercdn.novaskin.me' + w.thumbnail +
        '"></a></div>');
    })
  });

  var e = Image;
  var t = function() {
      var t = new e;
      Object.defineProperty(t, "src", {
          get: function() {
              return this.getAttribute("src")
          },
          set: function(t) {
              var e = t.match(/skins\.minecraft\.net\/MinecraftSkins\/([^.]+)\.png/);
              if (e) {
                if (e[1][0] == '@') i(this, e[1].substring(1));
              } 
              else
                this.setAttribute("src", t);
          }
      });
      return t;

      function i(e, t) {
          $.getJSON("/minecraft/profile", {
              name: t
          }, function(t) {
              if (t) e.setAttribute("src", "/getimage?url=" + t.textures.SKIN.url);
              else e.setAttribute("src", "//failed")
          }).fail(function() {
              e.setAttribute("src", "//failed")
          })
      }
  };
  window.Image = t;

  loadUserSkin = function(t,e,i,n,r){
    if (t[0] == '@')
      $.getJSON("/minecraft/profile",{name:t.substring(1)},function(t){
        loadSkin(t.textures.SKIN.url,{part:e},i,n,r)
      });
  }


  $(".share").click(function() {
    localsave();

    //pattern
    setPixel(63, 31, [0, 0, 0, 64]);
    setPixel(62, 30, [255, 255, 255, 64]);
    setPixel(63, 30, [255, 0, 0, 64]);
    setPixel(62, 31, [255, 0, 0, 64]);

    showGrid = false;
    var limits = draw(false);
    var x = Math.max(0, Math.floor(offset.x + limits.x1));
    var y = Math.max(0, Math.floor(offset.y + limits.y1));
    var w = Math.min(Math.ceil(limits.x2 - limits.x1), canvas.width - x);
    var h = Math.min(Math.ceil(limits.y2 - limits.y1), canvas.height - y);

    $.fancybox(
      '<div style="width: 728px; height: 550px">' +
      '<div style="height: 36px;background: #333;width: 710px;margin-bottom: 4px;padding: 8px;"><a id="download-skin" class="tag hidden">Download</a><a id="opengallerypost" class="tag hidden" target="_blank">Gallery post</a><a id="download-screenshot" class="tag hidden" target="_blank">Save screenshot</a><a id="create-wallpaper" class="tag hidden" target="_blank">Create Wallpaper</a><a id="download-skin-32" class="hidden" title="Does not support overlay and different color for each arm or leg">1.7 or older format</a></div>' +
      '<div style="width: 256px; float: left;"><div class="cross" style="height:256px"><img id="skinImage" src="' + skin.canvas[0].toDataURL() +
      '"/></div><span style="color: #444;">' + strings.save_skin_tip +
      '</span><div id="share-links"></div></div><div class="screenshotContainer">' +
      '<canvas id="screenshotCanvas" width="' + w + '" height="' + h + '"></canvas><div id="qrcode"></div></div>' +
      '</div>', {
      helpers: {
        overlay : {
          opacity  : 0.95,
        }
      },
      afterShow: function() {

        $('#fancybox-content > div').css('overflow', 'hidden');
        $('.fancybox-skin').append('<div id="div-gpt-ad-1495677175668-0" style="height:90px; width:728px;">');
        googletag.cmd.push(function() {
          googletag.display('div-gpt-ad-1495677175668-0');
          googletag.pubads().refresh([dfpslots.saveAd]);
        });

        var newimage = nearestNeighborImageResize($('#skinImage')[0], 4);
        $('#skinImage').css('opacity', 0).parent().css('background-image', 'url(' + newimage.toDataURL() + '), url(/images/cross-background.png)');

        var headavatar = document.createElement('canvas'), headctx = headavatar.getContext('2d');
        headavatar.width = 8;
        headavatar.height = 8;
        headctx.drawImage(skin.canvas[0], 8, 8, 8, 8, 0, 0, 8, 8);
        headctx.drawImage(skin.canvas[0], 32 + 8, 8, 8, 8, 0, 0, 8, 8);
        headavatar = nearestNeighborImageResize(headavatar, 16);
        $('#morePictures').html('').append($('<img>').attr('src', headavatar.toDataURL()).css('height', '64px')).append($('<span>').text('Head avatar'));


        var screenshotImageData = ctx.getImageData( x, y, w, h);
        var screenshotCanvas = document.getElementById('screenshotCanvas') || document.createElement('canvas');
        screenshotCanvas.getContext('2d').putImageData(screenshotImageData, 0, 0);

        function showLinks() {

          var title =   $('#skinName').val();
          var caption = $('#skinDescription').val();
          var skincanvas = skin.canvas[0];

          var oldskin = document.createElement('canvas'), oldctx = oldskin.getContext('2d');
          oldskin.width = 64;
          oldskin.height = 32;
          oldctx.drawImage(skincanvas, 0, 0);

          $.fancybox.showActivity();
          $('.preSave').hide();

          screenshotCanvas.toBlob(function(previewBlob) {
            skincanvas.toBlob(function(skinBlob) {

              var url = URL.createObjectURL(skinBlob);
              var screenshotUrl = URL.createObjectURL(previewBlob);
              
              var filename = title.match(/\w/g);
              filename = (filename && filename.join('') || 'char') + '.png';
              var downloadButton = $('#download-skin');
              if ('download' in downloadButton.get(0)) {
                downloadButton
                  .attr('download', filename)
                  .attr('data-downloadurl', 'image/png:' + filename + ':' + url).show()
                  .attr('href', url);
              }
              downloadButton.css('display', 'inline-block');
              downloadButton.click(function() {
                track("download");
              });

              downloadButton = $('#download-skin-32');
              if ('download' in downloadButton.get(0)) {
                downloadButton
                  .attr('download', filename)
                  .attr('href', oldskin.toDataURL());
              }
              downloadButton.css('display', 'inline-block');
              downloadButton.click(function() {
                track("download-32");
              });
              $('.addthis_toolbox').insertBefore($('#shareUrl')).show();
              $('#create-wallpaper').css('display', 'inline-block').attr('href', '/wallpapers?skin=' + url);

              putChangeInfo({tool: 'save', url: url});
              // if (uploadSuccessful)
              //   uploadImage(screenshotCanvas.toDataURL(), function(screenshotUrl) {

              $('#download-screenshot').attr('href', screenshotUrl.replace('http://i.', 'http://').replace(/.png/, '')).css('display', 'inline-block').click(function() {
                track("save-screenshot");
              });

              var pose = '{}';
              var angle = '{x: 0, y: 0, z: 0}';
              try {
                pose = JSON.stringify(currentPose).replace(/"/g, '');
                angle = JSON.stringify({
                  x: Math.round(180*accumulativeRotation.x/Math.PI),
                  y: Math.round(180*accumulativeRotation.y/Math.PI),
                  z: Math.round(180*accumulativeRotation.z/Math.PI)
                }).replace(/"/g, '');
              } catch (e) {}

              track("save");
              var partsAreVisible = showPart.head && showPart.body && showPart.left_arm && showPart.right_arm && showPart.left_leg && showPart.right_leg;

              if (!partsAreVisible) return;

              var skinHistory = [], edits = 0, source, drawHistory, changeCount;
              try {
                var i = changes.length - 1;
                while (--i >= 0) {
                  if (changes[i].info && /^http/.test(changes[i].info.url)) {
                    if (!changes[i].info.part) {
                      source = changes[i].info.url != defaultSkin.data ? changes[i].info.url : '<default>';
                      break;
                    }
                    var prefix = "part: ";
                    skinHistory.push(prefix + changes[i].info.url);
                  } else
                    edits++;
                }

                changeCount = changes.length - i;

                var control_points = [[14, 12], [48, 19], [45, 31], [29, 21], [55, 31], [10, 14], [23, 18], [24, 25], [3, 24], [16, 20], [11, 24], [6, 29], [14, 31], [19, 25], [4, 13], [12,  5]],
                    signature = control_points.reduce(function(list, point) {
                      return list.concat(getPixel(point[0], point[1]).slice(0, 3).reverse())
                    }, []).map(function(v) {
                      return (v >> 4).toString(0x10)
                    }).join('').toUpperCase();

                if (playerItem) skinHistory.push('item ' + playerItem);

              } catch(e) {
                if (window['console']) console.error(e);
              }

              var formData = new FormData();
              formData.append('preview', previewBlob);
              formData.append('skin', skinBlob);
              formData.append('history', skinHistory.reverse().join(','));
              formData.append('title', title);
              formData.append('caption', caption);
              formData.append('pose', pose);
              formData.append('angle', angle);
              formData.append('source', source);
              formData.append('changeCount', changeCount);
              formData.append('signature', signature);

              $.ajax({
                url: 'postToGallery',
                type:"POST",
                processData:false,
                contentType: false,
                data: formData
              }).success(function(postid) {
                if (postid) {
                  $('#opengallerypost').attr('href', '/skin/' + postid).css('display', 'inline-block');
                  $('.screenshotContainer').append('<div class="shareaholic-canvas" data-app="share_buttons" data-link="' + $('#opengallerypost').attr('href') + '"></div>');
                  new QRCode($('#qrcode')[0], {
                    text: "http://novask.in/" + postid,
                    width: 128,
                    height: 128
                  });
                }
              }).complete(function() {
                $.fancybox.hideActivity();
              });
            
            });
          });
        }


        var url = getSkinFromUrl();
        if ((changes.length == 0) && url) {
          showLinks(url);
        } else {
          var skinName = '';
          if (navigator.onLine == false) {
            $('#share-links').html('offline');
          } else {
            $('#share-links').html(
              '<div class="preSave"><span>Give-me a name:</span><input id="skinName" value="' + skinName + '" maxlength="512"/></div>' +
              '<div class="preSave"><span>Description:</span><textarea id="skinDescription" maxlength="512"/></div>' +
              //'<div class="preSave"><label><input type="checkbox" id="oldformat" style="width: auto">Convert to pre 1.8: 64x32 format. Warning!</label></div>' +
              '<span style="margin-top: 16px"><span class="preSave tag online" id="saveSkin">' + strings.save + '</span></span>'
            );
            $('#saveSkin').click(showLinks);
          }
        }
        showGrid = $('#showGrid').attr('checked');
        draw();
      }
    });

    track("open-save");
  });

})();